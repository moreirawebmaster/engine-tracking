include: package:flutter_lints/flutter.yaml

formatter:
  page_width: 120
  trailing_commas: preserve

analyzer:
  exclude:
    - lib/generated/**
    - lib/translations/**
    - lib/l10n/**
    - lib/**/*.g.dart
    - test/_data/**
    - example/**
    - examples/**
    - build/**
    - .dart_tool/**

  # Language settings for modern Dart features
  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: false

  errors:
    # Security and runtime safety
    invalid_assignment: error
    missing_required_param: error
    missing_return: error
    dead_code: error
    unreachable_from_main: error

    # Performance warnings
    unused_local_variable: warning
    unused_element: warning
    unused_field: warning
    unused_import: warning
    unused_shown_name: warning

    # Null safety enforcement
    receiver_of_type_never: error
    null_check_on_nullable_type_parameter: error

    # Records and patterns (Dart 3.0+)
    record_literal_one_positional_no_trailing_comma: error

    # Collections best practices
    collection_methods_unrelated_type: error
    unrelated_type_equality_checks: error

linter:
  rules:
    public_member_api_docs: true
    # === SECURITY & SAFETY (2025 Critical) ===
    # Modern security practices
    avoid_dynamic_calls: false
    avoid_type_to_string: true
    avoid_web_libraries_in_flutter: true
    secure_pubspec_urls: true

    # Null safety enforcement
    avoid_null_checks_in_equality_operators: true
    null_check_on_nullable_type_parameter: true
    unnecessary_null_checks: true
    unnecessary_null_aware_assignments: true
    unnecessary_null_aware_operator_on_extension_on_nullable: true
    unnecessary_nullable_for_final_variable_declarations: true

    # === PARAMETER ORDERING (STMR STANDARD) ===
    # Parameter ordering: required -> defaults -> nullables -> super.key
    always_put_required_named_parameters_first: true
    super_goes_last: true

    # === CLASS MEMBER ORDERING (STMR STANDARD) ===
    # Constructors always first in class, above properties and methods
    sort_constructors_first: true
    sort_unnamed_constructors_first: true

    # === PERFORMANCE ===
    # Memory and performance optimization
    avoid_unnecessary_containers: true
    avoid_function_literals_in_foreach_calls: true
    avoid_slow_async_io: true
    prefer_const_constructors: true
    prefer_const_constructors_in_immutables: true
    prefer_const_declarations: true
    prefer_const_literals_to_create_immutables: true
    use_colored_box: true
    use_decorated_box: true
    sized_box_for_whitespace: true
    sized_box_shrink_expand: true

    # Async/Future optimization
    avoid_void_async: true
    unawaited_futures: true
    discarded_futures: true
    await_only_futures: true
    unnecessary_await_in_return: true

    # === MODERN DART FEATURES (3.0+) ===
    # Records and patterns support
    use_super_parameters: true
    matching_super_parameters: true
    use_enums: true

    # === CODING STANDARDS ===
    # Imports and organization
    always_use_package_imports: true
    avoid_relative_lib_imports: true
    depend_on_referenced_packages: true
    directives_ordering: true

    # Code style consistency
    always_declare_return_types: true
    annotate_overrides: true
    prefer_single_quotes: true
    prefer_final_fields: true
    prefer_final_locals: true
    prefer_final_parameters: true
    prefer_final_in_for_each: true

    # === FLUTTER SPECIFIC ===
    # Widget best practices
    use_key_in_widget_constructors: true
    use_full_hex_values_for_flutter_colors: true
    sort_child_properties_last: true
    no_logic_in_create_state: true
    use_build_context_synchronously: true

    # === ERROR PREVENTION ===
    # Runtime error prevention
    avoid_empty_else: true
    avoid_returning_null_for_void: true
    avoid_shadowing_type_parameters: true
    avoid_types_as_parameter_names: true
    control_flow_in_finally: true
    empty_statements: true
    exhaustive_cases: true
    no_duplicate_case_values: true
    throw_in_finally: true

    # Logic and flow
    avoid_bool_literals_in_conditional_expressions: true
    no_literal_bool_comparisons: true
    prefer_conditional_assignment: true
    prefer_if_null_operators: true
    prefer_null_aware_operators: true
    prefer_null_aware_method_calls: true

    # === READABILITY & MAINTAINABILITY ===
    # Code organization
    library_names: true
    library_prefixes: true
    file_names: true
    package_names: true
    constant_identifier_names: true
    non_constant_identifier_names: true

    # Documentation and comments
    slash_for_doc_comments: true
    comment_references: true
    flutter_style_todos: true

    # Code structure
    curly_braces_in_flow_control_structures: true
    empty_constructor_bodies: true
    prefer_collection_literals: true
    prefer_contains: true
    prefer_expression_function_bodies: true
    prefer_foreach: true
    prefer_function_declarations_over_variables: true
    prefer_if_elements_to_conditional_expressions: true
    prefer_initializing_formals: true
    prefer_inlined_adds: true
    prefer_interpolation_to_compose_strings: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_is_not_operator: true
    prefer_spread_collections: true
    prefer_typing_uninitialized_variables: true

    # === MODERN CLEANUP ===
    # Remove redundancy
    unnecessary_brace_in_string_interps: true
    unnecessary_const: true
    unnecessary_constructor_name: true
    unnecessary_getters_setters: true
    unnecessary_lambdas: true
    unnecessary_late: true
    unnecessary_new: true
    unnecessary_overrides: true
    unnecessary_parenthesis: true
    unnecessary_raw_strings: true
    unnecessary_statements: true
    unnecessary_string_escapes: true
    unnecessary_string_interpolations: true
    unnecessary_this: true
    unnecessary_to_list_in_spreads: true

    # === PROFESSIONAL STANDARDS ===
    # Trailing commas for better diffs
    require_trailing_commas: true

    # Parameter organization
    avoid_positional_boolean_parameters: true
    avoid_unused_constructor_parameters: true

    # Type safety
    avoid_equals_and_hash_code_on_mutable_classes: false
    hash_and_equals: true
    test_types_in_equals: true
    lines_longer_than_80_chars: false
